Working
</br>
<%= button_to 'Google Login', @googleLoginLink %> 
</br>
</br>

<%= link_to 'Waley Playlists JSON from Youtube', @waleysPlaylistsJSONLink %>

</br>

<button id="nikeelevet-json-request">
	Waley Playlists JSON from server side
</button>

</br>

<%= link_to 'User Controller', user_path %>

</br>

<%= link_to 'My Playlist JSON', sampleajax_path %>


<button id="google-login">
	Google Login
</button>

</br>

<button id="add-friend">
	Add Friend
</button>

</br>

<button id="basic-ajax-request">
	Basic Ajax Request
</button>

</br>

<%= link_to 'Sample Ajax', sampleajax_path %>

</br>

<%= link_to 'Playlist', playlist_path %>

<ul id="friends-list">
</ul>

<script type="text/javascript">
// link for testing environment
var googleLoginLink = "https://accounts.google.com/o/oauth2/auth?";
var client_id = "client_id=908038792880-vm3862hmpnp7u6gnmgd8104g8u7r1sr1.apps.googleusercontent.com";
var redirect_uri = "redirect_uri=http://localhost:3000/oauth2callback";
var gscope = "scope=https://gdata.youtube.com";
var response_type = "response_type=token";
var googleLoginLink = googleLoginLink + client_id + '&' + redirect_uri + '&' + gscope + '&' + response_type;
// to-do
// link for production environment

(function ($) {
  	$.ajaxSetup ({
		cache: false
	});
	
	var ajax_load = "<img class='loading' src='img/load.gif' alt='loading...' />";

  Friend = Backbone.Model.extend({
    //Create a model to hold friend atribute
    name: null
  });
  
  Friends = Backbone.Collection.extend({
    //This is our Friends collection and holds our Friend models
    initialize: function (models, options) {
      this.bind("add", options.view.addFriendLi);
      //Listen for new additions to the collection and call a view function if so
    }
  });
  
  AppView = Backbone.View.extend({
    el: $("body"),
    initialize: function () {
      this.friends = new Friends( null, { view: this });
      //Create a friends collection when the view is initialized.
      //Pass it a reference to this view to create a connection between the two
    },
    events: {
      "click #add-friend":  "showPrompt",
	  "click #google-login":  "getAccessToken",
	  "click #basic-ajax-request": "basicAjaxRequest",
	  "click #nikeelevet-json-request": "nikeelevetAjaxRequest"
    },
    showPrompt: function () {
      var friend_name = prompt("Who is your friend?");
      var friend_model = new Friend({ name: friend_name });
      //Add a new friend model to our friend collection
      this.friends.add( friend_model );
    },
	getAccessToken: function() {
		$("#friends-list").append("<li>" + "getAccessToken called" + "</li>");
		jQuery.ajax(googleLoginLink);
	},
	basicAjaxRequest: function() {
		$("#friends-list").append("<li>" + 'basicAjaxRequest function called' + "</li>");
		
		$.ajax({
		  url: googleLoginLink,
		  type: "GET",
		  success: function( data ) {
		    $("#friends-list").append("<li>" + 'ajax call successful' + "</li>");
		  }
		});
	},
	nikeelevetAjaxRequest: function() {
		$("#friends-list").append("<li>" + "nikeelevetAjaxRequest called" + "</li>");
		jQuery.ajax(googleLoginLink);
	},
    addFriendLi: function (model) {
      //The parameter passed is a reference to the model that was added
      $("#friends-list").append("<li>" + model.get('name') + "</li>");
      //Use .get to receive attributes of the model
    }
  });
  
  var appview = new AppView;
})(jQuery);
</script>